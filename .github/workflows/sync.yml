name: Sync Upstream

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:      # Allow manual trigger

jobs:
  Sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add upstream remote using stored secret
          git remote add upstream "${{ secrets.UPSTREAM_REPO_URL }}"

      - name: Fetch latest from upstream
        run: |
          # Fetch latest from upstream
          git fetch upstream --prune

          # Determine default branch
          if git rev-parse --verify upstream/main >/dev/null 2>&1; then
            DEFAULT_BRANCH="main"
          elif git rev-parse --verify upstream/master >/dev/null 2>&1; then
            DEFAULT_BRANCH="master"
          else
            echo "::error::Could not find main or master branch in upstream"
            exit 1
          fi
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Create sync branch and PR
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Fetch and checkout fork_upstream branch
          git fetch origin fork_upstream
          git checkout -b fork_upstream origin/fork_upstream

          # Create a new branch for the sync
          SYNC_BRANCH="sync/upstream-$(date +%Y%m%d)"
          git checkout -b $SYNC_BRANCH

          # Try to merge upstream changes
          if ! git merge upstream/$DEFAULT_BRANCH --no-edit; then
            echo "::warning::Merge conflicts detected. Creating conflict resolution PR."
            
            # Get conflict details before aborting the merge
            CONFLICTS=$(git diff --name-only --diff-filter=U)
            STATUS=$(git status -s)
            
            # Abort the merge to get to a clean state
            git merge --abort
            
            # Create a temporary merge commit to show difference
            git checkout --orphan temp_$SYNC_BRANCH
            git reset --hard
            
            # Copy upstream files
            git checkout upstream/$DEFAULT_BRANCH -- .
            git add .
            git commit -m "upstream/$DEFAULT_BRANCH state"
            
            # Now create the PR branch from this clean state
            git checkout -b $SYNC_BRANCH temp_$SYNC_BRANCH

            # Push the branch with upstream content
            git push origin $SYNC_BRANCH
            
            # Create conflict resolution PR
            BODY="Conflicts detected while syncing with upstream. This PR contains the current upstream state.

            ### Conflicts
            \`\`\`
            $STATUS
            \`\`\`

            Please resolve these conflicts manually by comparing with fork_upstream branch."

            gh pr create \
              --base fork_upstream \
              --head $SYNC_BRANCH \
              --title "‚ö†Ô∏è Upstream Sync Conflicts - Manual Resolution Required" \
              --body "$BODY"
            
            # Create conflict resolution issue with more details
            ISSUE_BODY="Merge conflicts were detected while syncing from upstream.

            ### Affected Files
            \`\`\`
            $CONFLICTS
            \`\`\`

            ### Resolution Steps
            1. Check out the conflict resolution PR: ${{ github.server_url }}/${{ github.repository }}/pulls
            2. This PR contains the upstream version of the files
            3. Compare with fork_upstream to manually resolve conflicts
            4. You may need to cherry-pick changes or manually merge files
            5. Test the changes thoroughly before merging

            ### Additional Details
            - Branch with upstream version: \`$SYNC_BRANCH\`
            - Target branch: \`fork_upstream\`
            - Upstream branch: \`$DEFAULT_BRANCH\`

            @${{ github.repository_owner }}"

            gh issue create \
              --title "üîÑ Upstream Sync Conflicts Detected $(date +%Y-%m-%d)" \
              --body "$ISSUE_BODY" \
              --label sync-failed \
              --label needs-resolution
            
            exit 0  # Exit successfully after creating the issue and PR
          fi

          # Check if there are any changes to commit
          if git diff --quiet fork_upstream; then
            echo "No changes to sync from upstream"
            exit 0
          fi

          # Push changes
          git push origin $SYNC_BRANCH

          # Get upstream version for PR description
          UPSTREAM_VERSION=$(git describe --tags --abbrev=0 upstream/$DEFAULT_BRANCH 2>/dev/null || echo "latest")

          # Create PR
          gh pr create \
            --base fork_upstream \
            --head $SYNC_BRANCH \
            --title "‚¨ÜÔ∏è Sync with upstream $UPSTREAM_VERSION" \
            --body "Automated PR to sync with upstream repository changes."

      - name: Create sync-failed label if it doesn't exist
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          gh label create sync-failed \
            --description "Issues related to sync failures" \
            --color "d73a4a" || true

      - name: Create issue on failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          ISSUE_BODY="The automated upstream sync workflow failed.

          ### Error Details
          Please check the workflow logs for more information:
          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          ### Manual Steps Required
          1. Review the error logs
          2. Resolve any conflicts
          3. Re-run the sync workflow

          @${{ github.repository_owner }}"

          gh issue create \
            --title "üîÑ Upstream Sync Failed $(date +%Y-%m-%d)" \
            --body "$ISSUE_BODY" \
            --label sync-failed