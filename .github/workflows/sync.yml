name: Sync Upstream

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:      # Allow manual trigger

jobs:
  Sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Add upstream remote using stored secret
          git remote add upstream "${{ secrets.UPSTREAM_REPO_URL }}"

      - name: Fetch latest from upstream
        run: |
          # Fetch latest from upstream
          git fetch upstream --prune

          # Determine default branch
          if git rev-parse --verify upstream/main >/dev/null 2>&1; then
            DEFAULT_BRANCH="main"
          elif git rev-parse --verify upstream/master >/dev/null 2>&1; then
            DEFAULT_BRANCH="master"
          else
            echo "::error::Could not find main or master branch in upstream"
            exit 1
          fi
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Create required labels
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Create labels if they don't exist
          gh label create sync-failed \
            --description "Issues related to sync failures" \
            --color "d73a4a" || true
            
          gh label create needs-resolution \
            --description "Requires manual conflict resolution" \
            --color "fbca04" || true

      - name: Create sync branch and PR
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Generate branch names
          DATE_SUFFIX=$(date +%Y%m%d)
          SYNC_BRANCH="sync/upstream-${DATE_SUFFIX}"
          
          # Fetch and checkout fork_upstream branch
          git fetch origin fork_upstream
          git checkout -b fork_upstream origin/fork_upstream

          # Create a new branch for the sync
          git checkout -b $SYNC_BRANCH
          
          # Try to merge upstream changes, automatically preferring upstream versions on conflict
          git merge upstream/$DEFAULT_BRANCH -X theirs --no-edit
          
          # Check if there are any changes to commit
          if git diff --quiet fork_upstream; then
            echo "No changes to sync from upstream"
            exit 0
          fi
          
          # Push changes
          git push origin $SYNC_BRANCH

          # Get upstream version for PR description
          UPSTREAM_VERSION=$(git describe --tags --abbrev=0 upstream/$DEFAULT_BRANCH 2>/dev/null || echo "latest")
          
          # Get the changes for the PR description
          CHANGES=$(git log --pretty=format:"* %s" fork_upstream..$SYNC_BRANCH)
          
          # Create PR with detailed changes
          gh pr create \
            --base fork_upstream \
            --head $SYNC_BRANCH \
            --title "‚¨ÜÔ∏è Sync with upstream $UPSTREAM_VERSION" \
            --body "Automated PR to sync with upstream repository changes.

          ### Changes from upstream:
          $CHANGES"
          
          # Auto-merge the PR we just created (using branch name instead of PR URL)
          gh pr merge $SYNC_BRANCH --merge --admin

      - name: Create issue on failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          ISSUE_BODY="The automated upstream sync workflow failed.

          ### Error Details
          Please check the workflow logs for more information:
          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

          ### Manual Steps Required
          1. Review the error logs
          2. Resolve any conflicts
          3. Re-run the sync workflow

          @${{ github.repository_owner }}"

          gh issue create \
            --title "üîÑ Upstream Sync Failed $(date +%Y-%m-%d)" \
            --body "$ISSUE_BODY" \
            --label sync-failed